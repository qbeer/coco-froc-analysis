name: Python Package using Conda

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9.18"
      - uses: abatilo/actions-poetry@v2
      - name: Install dependencies
        run: |
          poetry install
      - name: Lint with flake8
        run: |
          poetry add flake8
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 coco_froc_analysis --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 coco_froc_analysis --count --exit-zero --max-complexity=25 --max-line-length=127 --statistics
      - name: Test with unittest and coverage
        run: |
          poetry run coverage run -m unittest discover --pattern "*_test.py" -v
          poetry run coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYP_FROC_SECRET }}
          skip_existing: true
          verbose: true
          print_hash: true
